/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "s3eOneSignal.h"


#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
// For MIPs (and WP8) platform we do not have asm code for stack switching
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL_LOCK
#endif
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef       void(*GameThriveInitialize_t)(const char* appId, const char* googleProjectNumber, GameThriveNotificationReceivedCallbackFn callbackFn, s3eBool autoRegister);
typedef       void(*GameThriveSendTag_t)(const char* key, const char* value);
typedef       void(*GameThriveGetTags_t)(GameThriveTagsReceivedCallbackFn callbackFn);
typedef       void(*GameThriveDeleteTag_t)(const char* key);
typedef       void(*GameThriveSendPurchase_t)(const double* amount);
typedef       void(*GameThriveGetIdsAvailable_t)(GameThriveIdsAvailableCallbackFn callbackFn);
typedef        int(*GameThriveSystemPaused_t)(void* systemData, void* userData);
typedef        int(*GameThriveSystemResume_t)(void* systemData, void* userData);
typedef       void(*GameThriveRegisterForPushNotifications_t)();
typedef       void(*GameThriveEnableVibrate_t)(s3eBool enable);
typedef       void(*GameThriveEnableSound_t)(s3eBool enable);
typedef       void(*OneSignalInitialize_t)(const char* appId, const char* googleProjectNumber, OneSignalNotificationReceivedCallbackFn callbackFn, s3eBool autoRegister);
typedef       void(*OneSignalSendTag_t)(const char* key, const char* value);
typedef       void(*OneSignalGetTags_t)(OneSignalTagsReceivedCallbackFn callbackFn);
typedef       void(*OneSignalDeleteTag_t)(const char* key);
typedef       void(*OneSignalSendPurchase_t)(const double* amount);
typedef       void(*OneSignalGetIdsAvailable_t)(OneSignalIdsAvailableCallbackFn callbackFn);
typedef        int(*OneSignalSystemPaused_t)(void* systemData, void* userData);
typedef        int(*OneSignalSystemResume_t)(void* systemData, void* userData);
typedef       void(*OneSignalRegisterForPushNotifications_t)();
typedef       void(*OneSignalEnableVibrate_t)(s3eBool enable);
typedef       void(*OneSignalEnableSound_t)(s3eBool enable);

/**
 * struct that gets filled in by s3eOneSignalRegister
 */
typedef struct s3eOneSignalFuncs
{
    GameThriveInitialize_t m_GameThriveInitialize;
    GameThriveSendTag_t m_GameThriveSendTag;
    GameThriveGetTags_t m_GameThriveGetTags;
    GameThriveDeleteTag_t m_GameThriveDeleteTag;
    GameThriveSendPurchase_t m_GameThriveSendPurchase;
    GameThriveGetIdsAvailable_t m_GameThriveGetIdsAvailable;
    GameThriveSystemPaused_t m_GameThriveSystemPaused;
    GameThriveSystemResume_t m_GameThriveSystemResume;
    GameThriveRegisterForPushNotifications_t m_GameThriveRegisterForPushNotifications;
    GameThriveEnableVibrate_t m_GameThriveEnableVibrate;
    GameThriveEnableSound_t m_GameThriveEnableSound;
    OneSignalInitialize_t m_OneSignalInitialize;
    OneSignalSendTag_t m_OneSignalSendTag;
    OneSignalGetTags_t m_OneSignalGetTags;
    OneSignalDeleteTag_t m_OneSignalDeleteTag;
    OneSignalSendPurchase_t m_OneSignalSendPurchase;
    OneSignalGetIdsAvailable_t m_OneSignalGetIdsAvailable;
    OneSignalSystemPaused_t m_OneSignalSystemPaused;
    OneSignalSystemResume_t m_OneSignalSystemResume;
    OneSignalRegisterForPushNotifications_t m_OneSignalRegisterForPushNotifications;
    OneSignalEnableVibrate_t m_OneSignalEnableVibrate;
    OneSignalEnableSound_t m_OneSignalEnableSound;
} s3eOneSignalFuncs;

static s3eOneSignalFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xf8792e70, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: s3eOneSignal");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xf8792e70, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool s3eOneSignalAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

void GameThriveInitialize(const char* appId, const char* googleProjectNumber, GameThriveNotificationReceivedCallbackFn callbackFn, s3eBool autoRegister)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[0] func: GameThriveInitialize"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_GameThriveInitialize(appId, googleProjectNumber, callbackFn, autoRegister);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void GameThriveSendTag(const char* key, const char* value)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[1] func: GameThriveSendTag"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_GameThriveSendTag(key, value);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void GameThriveGetTags(GameThriveTagsReceivedCallbackFn callbackFn)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[2] func: GameThriveGetTags"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_GameThriveGetTags(callbackFn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void GameThriveDeleteTag(const char* key)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[3] func: GameThriveDeleteTag"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_GameThriveDeleteTag(key);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void GameThriveSendPurchase(const double* amount)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[4] func: GameThriveSendPurchase"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_GameThriveSendPurchase(amount);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void GameThriveGetIdsAvailable(GameThriveIdsAvailableCallbackFn callbackFn)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[5] func: GameThriveGetIdsAvailable"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_GameThriveGetIdsAvailable(callbackFn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

int GameThriveSystemPaused(void* systemData, void* userData)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[6] func: GameThriveSystemPaused"));

    if (!_extLoad())
        return 0;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    int ret = g_Ext.m_GameThriveSystemPaused(systemData, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

int GameThriveSystemResume(void* systemData, void* userData)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[7] func: GameThriveSystemResume"));

    if (!_extLoad())
        return 0;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    int ret = g_Ext.m_GameThriveSystemResume(systemData, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void GameThriveRegisterForPushNotifications()
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[8] func: GameThriveRegisterForPushNotifications"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_GameThriveRegisterForPushNotifications();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void GameThriveEnableVibrate(s3eBool enable)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[9] func: GameThriveEnableVibrate"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_GameThriveEnableVibrate(enable);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void GameThriveEnableSound(s3eBool enable)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[10] func: GameThriveEnableSound"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_GameThriveEnableSound(enable);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void OneSignalInitialize(const char* appId, const char* googleProjectNumber, OneSignalNotificationReceivedCallbackFn callbackFn, s3eBool autoRegister)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[11] func: OneSignalInitialize"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_OneSignalInitialize(appId, googleProjectNumber, callbackFn, autoRegister);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void OneSignalSendTag(const char* key, const char* value)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[12] func: OneSignalSendTag"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_OneSignalSendTag(key, value);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void OneSignalGetTags(OneSignalTagsReceivedCallbackFn callbackFn)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[13] func: OneSignalGetTags"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_OneSignalGetTags(callbackFn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void OneSignalDeleteTag(const char* key)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[14] func: OneSignalDeleteTag"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_OneSignalDeleteTag(key);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void OneSignalSendPurchase(const double* amount)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[15] func: OneSignalSendPurchase"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_OneSignalSendPurchase(amount);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void OneSignalGetIdsAvailable(OneSignalIdsAvailableCallbackFn callbackFn)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[16] func: OneSignalGetIdsAvailable"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_OneSignalGetIdsAvailable(callbackFn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

int OneSignalSystemPaused(void* systemData, void* userData)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[17] func: OneSignalSystemPaused"));

    if (!_extLoad())
        return 0;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    int ret = g_Ext.m_OneSignalSystemPaused(systemData, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

int OneSignalSystemResume(void* systemData, void* userData)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[18] func: OneSignalSystemResume"));

    if (!_extLoad())
        return 0;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    int ret = g_Ext.m_OneSignalSystemResume(systemData, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void OneSignalRegisterForPushNotifications()
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[19] func: OneSignalRegisterForPushNotifications"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_OneSignalRegisterForPushNotifications();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void OneSignalEnableVibrate(s3eBool enable)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[20] func: OneSignalEnableVibrate"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_OneSignalEnableVibrate(enable);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void OneSignalEnableSound(s3eBool enable)
{
    IwTrace(ONESIGNAL_VERBOSE, ("calling s3eOneSignal[21] func: OneSignalEnableSound"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_OneSignalEnableSound(enable);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}
